package satokitty.projecteular

import org.scalatest.FunSuite

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
class Problem2 extends FunSuite {
  lazy val fib: Stream[Int] = Stream.cons(1, Stream.cons(2, fib.zip(fib.tail).map(p => p._1 + p._2)))

  test("solution") {
    println(fib.takeWhile(_ < 4000000).filter(_ % 2 == 0).sum)
  }
}
